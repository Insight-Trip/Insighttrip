WITH EventoSelecionado AS (
    SELECT 
        e.Nome, 
        e.DataInicio, 
        e.DataFim,
        YEAR(e.DataInicio) AS Ano
    FROM Evento e
    WHERE LOWER(e.Nome) = LOWER('carnaval')
),
TotalCrimes AS (
    SELECT 
        c.fkEstado, 
        COUNT(*) AS total_crimes
    FROM Crime c
    JOIN EventoSelecionado es ON YEAR(c.Data) = es.Ano
    WHERE c.fkEstado = 31
    GROUP BY c.fkEstado
),
CrimesDuranteEvento AS (
    SELECT 
        c.fkEstado, 
        COUNT(*) AS crimes_evento
    FROM Crime c
    JOIN EventoSelecionado es 
        ON YEAR(c.Data) = es.Ano 
        AND c.Data BETWEEN es.DataInicio AND es.DataFim
    WHERE c.fkEstado = 11
    GROUP BY c.fkEstado
),
TotalViagens AS (
    SELECT 
        a.fkEstado, 
        COUNT(*) AS total_viagens
    FROM Viagem v
    JOIN Aeroporto a ON v.fkAeroportoDestino = a.idAeroporto
    JOIN EventoSelecionado es ON YEAR(v.dtViagem) = es.Ano
    WHERE a.fkEstado = 11
    GROUP BY a.fkEstado
),
ViagensDuranteEvento AS (
    SELECT 
        a.fkEstado, 
        COUNT(*) AS viagens_evento
    FROM Viagem v
    JOIN Aeroporto a ON v.fkAeroportoDestino = a.idAeroporto
    JOIN EventoSelecionado es 
        ON YEAR(v.dtViagem) = es.Ano 
        AND v.dtViagem BETWEEN es.DataInicio AND es.DataFim
    WHERE a.fkEstado = 11
    GROUP BY a.fkEstado
),
TopPaisesEstrangeiros AS (
    SELECT 
        p.Nome AS pais,
        COUNT(*) AS total_voos
    FROM Viagem v
    JOIN Aeroporto a_dest ON v.fkAeroportoDestino = a_dest.idAeroporto
    JOIN Aeroporto a_orig ON v.fkAeroportoOrigem = a_orig.idAeroporto
    JOIN Pais p ON a_orig.fkPais = p.idPais
    WHERE a_dest.fkPais = (SELECT idPais FROM Pais WHERE LOWER(Nome) = 'brasil')
        AND LOWER(p.Nome) <> 'brasil'
        AND YEAR(v.dtViagem) = (SELECT Ano FROM EventoSelecionado)
        AND v.dtViagem BETWEEN (SELECT DataInicio FROM EventoSelecionado) 
                             AND (SELECT DataFim FROM EventoSelecionado)
        AND a_dest.fkEstado = 11
    GROUP BY p.Nome
    ORDER BY total_voos DESC
    LIMIT 3
),
DadosEstadoJSON AS (
    SELECT 
        JSON_ARRAYAGG(
            JSON_OBJECT(
                'nome_estado', uf.Nome,
                'nome_evento', es.Nome,
                'porcentagem_crimes', IFNULL((ce.crimes_evento / tc.total_crimes) * 100, 0),
                'porcentagem_viagens', IFNULL((ve.viagens_evento / tv.total_viagens) * 100, 0)
            )
        ) AS dados_estado
    FROM UF uf
    CROSS JOIN EventoSelecionado es
    LEFT JOIN TotalCrimes tc ON tc.fkEstado = uf.CodigoIBGE
    LEFT JOIN CrimesDuranteEvento ce ON ce.fkEstado = uf.CodigoIBGE
    LEFT JOIN TotalViagens tv ON tv.fkEstado = uf.CodigoIBGE
    LEFT JOIN ViagensDuranteEvento ve ON ve.fkEstado = uf.CodigoIBGE
    WHERE uf.CodigoIBGE = 11
),
TopPaisesJSON AS (
    SELECT 
        JSON_ARRAYAGG(
            JSON_OBJECT(
                'pais', tp.pais,
                'total_voos', tp.total_voos
            )
        ) AS top_paises_estrangeiros
    FROM TopPaisesEstrangeiros tp
),
ViagensPorEstacao AS (
    SELECT
        CASE
            WHEN (MONTH(v.dtViagem) = 12 AND DAY(v.dtViagem) >= 21) 
                 OR (MONTH(v.dtViagem) IN (1, 2)) 
                 OR (MONTH(v.dtViagem) = 3 AND DAY(v.dtViagem) <= 20)
                THEN 'Verao'
            WHEN (MONTH(v.dtViagem) = 3 AND DAY(v.dtViagem) >= 21) 
                 OR (MONTH(v.dtViagem) IN (4, 5)) 
                 OR (MONTH(v.dtViagem) = 6 AND DAY(v.dtViagem) <= 20)
                THEN 'Outono'
            WHEN (MONTH(v.dtViagem) = 6 AND DAY(v.dtViagem) >= 21) 
                 OR (MONTH(v.dtViagem) IN (7, 8)) 
                 OR (MONTH(v.dtViagem) = 9 AND DAY(v.dtViagem) <= 20)
                THEN 'Inverno'
            WHEN (MONTH(v.dtViagem) = 9 AND DAY(v.dtViagem) >= 21) 
                 OR (MONTH(v.dtViagem) IN (10, 11)) 
                 OR (MONTH(v.dtViagem) = 12 AND DAY(v.dtViagem) <= 20)
                THEN 'Primavera'
            ELSE 'Desconhecida'
        END AS estacao,
        COUNT(*) AS total_viagens
    FROM Viagem v
    JOIN Aeroporto a ON v.fkAeroportoDestino = a.idAeroporto
    WHERE a.fkEstado = 11
    
    GROUP BY estacao
),
ViagensPorEstacaoJSON AS (
    SELECT 
        JSON_ARRAYAGG(
            JSON_OBJECT(
                'estacao', vpe.estacao,
                'totalViagens', vpe.total_viagens
            )
        ) AS total_viagens_por_estacao
    FROM ViagensPorEstacao vpe
)
SELECT 
    JSON_OBJECT(
        'dados_estado', DE.dados_estado,
        'top_paises_estrangeiros', TP.top_paises_estrangeiros,
        'total_viagens_por_estacao', VPE.total_viagens_por_estacao
    ) AS resultado
FROM DadosEstadoJSON DE
CROSS JOIN TopPaisesJSON TP
CROSS JOIN ViagensPorEstacaoJSON VPE;
